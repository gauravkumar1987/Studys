
#include<iostream>
using namespace std;

struct node
{
int data;
struct node *next;
};

struct node *head=NULL;
struct node *temp=NULL;

class test
{
public:
void disp();
void create();
void show();
void nextNode();
void insertBeing();
void sizetest();
void searchStr();
void reStr();
void midInsert();
};

void test::midInsert()
{
cout<<" insert position no:";
int pos;
cin>>pos;
temp=head;

node *midNode=new node();
cout<<"enter the mid data value :";
int info;
cin>>info;
midNode->data=info;


for(int i=1;i<=pos-1;i++)
        {
        temp=temp->next;
        }

midNode->next=temp->next;
temp->next=midNode;

}


void test::searchStr()
{
int info;
cout<<"\nEnter the string to be seaarched :";
cin>>info;
int position=0;
temp=head;
while(head!=NULL)
        {
        position++;
        if(head->data==info)
                {
                cout<<"Item found at :"<<position;
                }
        head=head->next;
        }
head=temp;
}


void test::sizetest()
{
temp=head;
int count=0;
while(temp!=NULL)
        {
        temp=temp->next;
        count++;
        }
cout<<"size is :"<<count;
}

void test::insertBeing()
{

node *insertBeing= new node();
int data;
cout<<"insert the value for beinging";
cin>>data;

insertBeing->data=data;
insertBeing->next=head;

head=insertBeing;

}

void test::nextNode()
{
cout<<"entering";

temp = head;

while(temp!=NULL)
        {
        if (temp->next==NULL)
                {
                cout<<"null found";
                cout<<"\ncreating new next node";
                node *nextNode=new node();
                int info;
                cout<<"enter value :";
                cin>>info;
                nextNode->data=info;
                nextNode->next=NULL;
                temp->next=nextNode;
                return;
                }
        else
                {
                temp=temp->next;
                }
        }

}

void test::show()
{
temp=head;
while(temp!=NULL)
        {
        cout<<"\n"<<temp->data;
        temp=temp->next;
        }

}


void test::disp()
{
hh:
cout<<"\nSelect the option";
cout<<"\n-----------------";
cout<<"\n1.create";
cout<<"\n2.show";
cout<<"\n3.nextNode()";
cout<<"\n4.InsertBegin()";
cout<<"\n5. linklist size()";
cout<<"\n6. search string()";
cout<<"\n7. String reverse()";
cout<<"\n8. Insert Middle()";
cout<<"\nanswer please :";
int ch;
cin>>ch;
if(ch==1)
{
create();
}
else if(ch==2)
        {
        show();
        }
else if(ch==3)
        {
        nextNode();
        }
else if(ch==4)
        {
        insertBeing();
        }
else if(ch==5)
        {
        sizetest();
        }
else if(ch==6)
        {
        searchStr();
        }
else if(ch==7)
        {
        reStr();
        }
else if(ch==8)
		{
		midInsert();	
		}
else
        {
        cout<<"invaild selection";
        }

cout<<"\nwant to perform one more operation(y/n) :";
char opt;
cin>>opt;
if(opt=='y')
{
goto hh;
}
}

void test::create()
{
node *newNode=new node();
cout<<"\nCreated New Node ";
int info;
cin>>info;
newNode->data=info;
newNode->next=NULL;
head=newNode;
}






int main()
{
test *obj;
obj->disp();
}






